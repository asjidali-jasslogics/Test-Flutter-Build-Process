name: Flutter Build Automation (Dev Mode)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    env:
      GH_USERNAME: ${{ secrets.USERNAME }}
      GH_REPO: ${{ secrets.REPO }}
      GH_TOKEN: ${{ secrets.GH_PAT }}
      BRANCH: main
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      FLUTTER_GIT_URL: https://github.com/flutter/flutter.git

    steps:
      - name: Checkout triggering repository
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt update -y
          sudo apt install -y \
            unzip zip git curl wget \
            openjdk-17-jdk \
            libgtk-3-dev \
            clang cmake ninja-build pkg-config liblzma-dev

      - name: Install Flutter SDK (3.24.2)
        run: |
          echo "Installing Flutter 3.24.2..."
          git clone https://github.com/flutter/flutter.git -b 3.24.2 --depth 1 /opt/flutter
          echo "/opt/flutter/bin" >> $GITHUB_PATH
          flutter --version
          flutter doctor -v

      - name: Clone private Flutter app
        run: |
          echo "Cloning app from private repo..."
          git clone -b $BRANCH https://$GH_USERNAME:$GH_TOKEN@github.com/$GH_USERNAME/$GH_REPO.git app
          cd app
          flutter pub get

      - name: Patch Gradle & AGP versions
        run: |
          cd app/android
          
          # Update AGP in build.gradle (legacy)
          if grep -q "com.android.tools.build:gradle" build.gradle; then
            sed -i "s#com\.android\.tools\.build:gradle:[0-9\.]\+#com.android.tools.build:gradle:8.3.2#g" build.gradle
          fi

          # Update AGP in settings.gradle (new format)
          if grep -q "com.android.application" settings.gradle; then
            sed -i "s#id(\"com.android.application\") version \"[0-9\.]\+\"#id(\"com.android.application\") version \"8.3.2\"#g" settings.gradle
          fi

          # Update Gradle wrapper
          if [ -f gradle/wrapper/gradle-wrapper.properties ]; then
            sed -i "s#distributionUrl=.*#distributionUrl=https\\://services.gradle.org/distributions/gradle-8.3-bin.zip#g" gradle/wrapper/gradle-wrapper.properties
          fi

      - name: Remove Windows 'cmd /c' from build.gradle
        run: |
          cd app/android/app
          echo "Removing Windows-specific 'cmd /c' commands..."
          sed -i '/cmd.*\/c/d' build.gradle
          sed -i "s/'cmd', '\/c', //g" build.gradle
          sed -i 's/"cmd", "\/c", //g' build.gradle
          sed -i 's/cmd \/c //g' build.gradle
          grep -n "cmd\|exec" build.gradle || echo "No cmd/exec found."

      - name: Install Android SDK (API 35)
        run: |
          mkdir -p $ANDROID_HOME/cmdline-tools
          cd $ANDROID_HOME/cmdline-tools

          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmd.zip
          unzip -q cmd.zip
          mkdir -p latest
          mv cmdline-tools/* latest/ || mv */* latest/ 2>/dev/null || true
          rm -rf cmdline-tools cmd.zip

          echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH

          yes | sdkmanager --licenses
          sdkmanager --install \
            "platform-tools" \
            "platforms;android-35" \
            "build-tools;35.0.0"

      - name: Verify Flutter setup
        run: |
          cd app
          flutter doctor -v

      - name: Build Debug APK
        run: |
          cd app
          flutter build apk --release

      - name: Package APKs
        run: |
          mkdir -p $GITHUB_WORKSPACE/artifacts
          cp app/build/app/outputs/flutter-apk/*.apk $GITHUB_WORKSPACE/artifacts/ || true
          cd $GITHUB_WORKSPACE/artifacts
          zip -r flutter_apks_${{ github.run_id }}.zip *.apk
          echo "Build artifacts packaged."

      - name: Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: flutter-apks-${{ github.run_id }}
          path: ${{ github.workspace }}/artifacts/flutter_apks_${{ github.run_id }}.zip

          retention-days: 7

