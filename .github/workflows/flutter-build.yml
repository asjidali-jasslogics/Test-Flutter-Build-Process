name: 🧱 Flutter Build Automation (Dev Mode)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      GH_USERNAME: ${{ secrets.USERNAME }}
      GH_REPO: ${{ secrets.REPO }}
      GH_TOKEN: ${{ secrets.GH_PAT }}
      BRANCH: main
      ANDROID_HOME: ${{ github.workspace }}/android-sdk

    steps:
      - name: 🧹 Checkout triggering repository
        uses: actions/checkout@v4

      - name: 📦 Install dependencies
        run: |
          echo "Updating and installing dependencies..."
          sudo apt update -y
          sudo apt install -y unzip zip git curl wget openjdk-17-jdk

      - name: 🪄 Install Flutter 3.24.2
        run: |
          echo "Installing Flutter SDK (3.24.2)..."
          git clone https://github.com/flutter/flutter.git -b 3.24.2 /opt/flutter
          export PATH="/opt/flutter/bin:/opt/flutter/bin/cache/dart-sdk/bin:$PATH"
          flutter doctor -v
          flutter --version

      - name: 🔐 Clone private Flutter repository
        run: |
          echo "Cloning private Flutter repository..."
          git clone -b $BRANCH https://$GH_USERNAME:$GH_TOKEN@github.com/$GH_USERNAME/$GH_REPO.git app
          cd app
          export PATH="/opt/flutter/bin:/opt/flutter/bin/cache/dart-sdk/bin:$PATH"
          flutter pub get

      - name: 🧰 Patch Gradle, AGP, and SDK versions
        run: |
          echo "Patching Android configuration..."
          cd app/android

          # Update AGP version to 8.3.2
          if grep -q "com.android.tools.build:gradle" build.gradle; then
            sed -i "s#com\.android\.tools\.build:gradle:[0-9\.]\+#com.android.tools.build:gradle:8.3.2#g" build.gradle || true
          fi

          # Also check settings.gradle (new Flutter template)
          if grep -q "com.android.application" settings.gradle; then
            sed -i "s#id 'com.android.application' version '[0-9\.]\+'#id 'com.android.application' version '8.3.2'#g" settings.gradle || true
          fi

          # Patch Gradle wrapper to 8.3
          if [ -f gradle/wrapper/gradle-wrapper.properties ]; then
            sed -i "s#distributionUrl=.*#distributionUrl=https\\://services.gradle.org/distributions/gradle-8.3-bin.zip#g" gradle/wrapper/gradle-wrapper.properties || true
          fi

          echo "🔧 Verifying Gradle & AGP versions..."
          grep "com.android.tools.build:gradle" build.gradle || echo "AGP verified"
          grep "distributionUrl" gradle/wrapper/gradle-wrapper.properties || echo "Gradle wrapper verified"

      - name: 🧩 Install Android SDK 35 (Fixed)
        run: |
          echo "Installing Android SDK 35..."
          mkdir -p $ANDROID_HOME/cmdline-tools
          cd $ANDROID_HOME/cmdline-tools

          # Download latest command line tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmd.zip
          unzip cmd.zip -d temp
          mv temp/cmdline-tools latest
          rm -rf temp cmd.zip

          # Export paths
          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
          echo "PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator" >> $GITHUB_ENV

          export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator

          yes | sdkmanager --licenses
          yes | sdkmanager \
            "platform-tools" \
            "platforms;android-35" \
            "build-tools;35.0.0"

          echo "✅ Android SDK 35 installed successfully."

      - name: ✅ Verify Android SDK Installation
        run: |
          echo "Checking Android SDK..."
          ls -R $ANDROID_HOME/cmdline-tools/latest/bin
          sdkmanager --list | head -20

      - name: ✅ Check Flutter App Requirements and dependencies
        run: |
          echo "Flutter doctor"
          flutter doctor
          
      - name: 🚀 Build Flutter APK (Dev Mode)
        run: |
          echo "Building Flutter debug APK..."
          cd app
          export PATH="/opt/flutter/bin:/opt/flutter/bin/cache/dart-sdk/bin:$PATH"
          flutter doctor
          flutter build apk --debug --android-skip-build-dependency-validation

      - name: 📦 Package build artifacts
        run: |
          echo "Packaging build..."
          cd app/build/app/outputs/flutter-apk
          zip -r flutter_build_${{ github.run_id }}.zip .
          mv flutter_build_${{ github.run_id }}.zip $GITHUB_WORKSPACE/
          echo "✅ Build packaged successfully."

      - name: 📤 Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: flutter_build_${{ github.run_id }}
          path: flutter_build_${{ github.run_id }}.zip
          retention-days: 5
